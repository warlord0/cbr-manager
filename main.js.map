{"version":3,"sources":["main.coffee"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["'use strict'\r\n\r\n{app, BrowserWindow, ipcMain, Menu, MenuItem} = require 'electron'\r\npath = require 'path'\r\nurl = require 'url'\r\npkg = require './package.json'\r\nconfigStore = require 'configstore'\r\n\r\n# Setup a configuration file\r\ncfg = new configStore pkg.name\r\n    # debug: false\r\n    # browser:\r\n    #     width: 800\r\n    #     height: 600\r\n    #     x: 0\r\n    #     y: 0\r\n    #     maximize: false\r\n    #     split: '25%'\r\n    # reader:\r\n    #     width: 800\r\n    #     height: 600\r\n    #     x: 0\r\n    #     y: 0\r\n    #     maximize: false\r\n\r\nwin = reader = mainMenu = null\r\n\r\n# Create the main BrowserWindow\r\ncreateWindow = ->\r\n    cfgBrowser = cfg.get 'browser'\r\n    win = new BrowserWindow\r\n        width: cfgBrowser.width\r\n        height: cfgBrowser.height\r\n        x: cfgBrowser.x\r\n        y: cfgBrowser.y\r\n        frame: true\r\n        resizable: true\r\n        icon: './images/superhero.ico'\r\n\r\n    win.maximize() if cfgBrowser.maximize is true\r\n\r\n    win.loadURL url.format\r\n        pathname: './index.html'\r\n        protocol: 'file:'\r\n        slashes: true\r\n\r\n    # Show the developer tools if using debug\r\n    if cfg.get('debug') is true\r\n        win.webContents.openDevTools\r\n            detach: true\r\n\r\n    # Save the window settings for next time\r\n    win.on 'close', ->\r\n        cfgBrowser = cfg.get 'browser'\r\n        cfgBrowser.width = win.getSize()[0]\r\n        cfgBrowser.height = win.getSize()[1]\r\n        cfgBrowser.x = win.getPosition()[0]\r\n        cfgBrowser.y = win.getPosition()[1]\r\n        cfgBrowser.split = cfg.get 'browser'\r\n            .split\r\n        if not win.isMaximized() and not win.isMinimized()\r\n            cfgBrowser.maximize = false\r\n        if win.isMaximized()\r\n            cfgBrowser.maximize = true\r\n        cfg.set 'browser', cfgBrowser\r\n        return\r\n\r\n    win.on 'closed', ->\r\n        win = null\r\n        return\r\n\r\n    return\r\n\r\n# Launch a Comic Book Reader Window\r\nlaunchReader = (cbrFile) ->\r\n    cfgReader = cfg.get 'reader'\r\n    if reader is null\r\n        reader = new BrowserWindow\r\n            width: cfgReader.width\r\n            height: cfgReader.height\r\n            x: cfgReader.x\r\n            y: cfgReader.y\r\n            frame: true\r\n            resizable: true\r\n            icon: './images/superhero.ico'\r\n\r\n    reader.maximize() if cfgReader.maximize is true\r\n\r\n    reader.loadURL url.format\r\n        pathname: './reader.html'\r\n        protocol: 'file:'\r\n        slashes: true\r\n\r\n    if cfg.get('debug') is true\r\n        reader.webContents.openDevTools\r\n            detach: true\r\n\r\n    reader.webContents.executeJavaScript \"loadPages('#{cbrFile}');\" # Tell the new window to load the comic book TODO: Is there a better way?\r\n\r\n    reader.on 'close', ->\r\n        cfgReader = cfg.get 'reader'\r\n        cfgReader.width = reader.getSize()[0]\r\n        cfgReader.height = reader.getSize()[1]\r\n        cfgReader.x = reader.getPosition()[0]\r\n        cfgReader.y = reader.getPosition()[1]\r\n        if not reader.isMaximized() and not win.isMinimized()\r\n            cfgReader.maximize = false\r\n        if reader.isMaximized()\r\n            cfgReader.maximize = true\r\n        cfg.set 'reader', cfgReader\r\n        return\r\n\r\n    reader.on 'closed', ->\r\n        reader = null # Reset the window to null or the garbage collector destroys it\r\n        return\r\n\r\n    return\r\n\r\n\r\n# App Events\r\napp.on 'ready', createWindow\r\n\r\napp.on 'activate', ->\r\n    createWindow if win?\r\n    return\r\n\r\napp.on 'windows-all-closed', ->\r\n    app.quit()\r\n    return\r\n\r\n# IPC Listener\r\nipcMain.on 'LaunchReader', (e, cbrFile) ->\r\n    launchReader cbrFile\r\n    return\r\n"]}