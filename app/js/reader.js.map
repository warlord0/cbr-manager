{"version":3,"sources":["reader.coffee"],"names":[],"mappings":";AAAA;;;;;;AAAA;AAAA,IAAA;;AAEA,SAAA,OAAA,CAAA,UAAA;;AACA,GAAA,GAAA,MAAA,CAAA;;AACA,GAAA,GAAA,OAAA,CAAA,iBAAA;;AACA,WAAA,GAAA,OAAA,CAAA,aAAA;;AACA,GAAA,GAAA,IAAA,WAAA,CAAA,GAAA,CAAA,IAAA;;AACA,SAAA,GAAA;;AACA,GAAA,GAAA;;AAEA,MAAA,CAAA,SAAA,GAAA,SAAA,OAAA;AACA,MAAA;EAAA,EAAA,GAAA,OAAA,CAAA,IAAA;EACA,IAAA,GAAA,OAAA,CAAA,MAAA;EACA,GAAA,GAAA,OAAA,CAAA,KAAA;EAEA,GAAA,CAAA,GAAA,CACA;IAAA,MAAA,EAAA,MAAA;IACA,aAAA,EAAA,IADA;IAEA,GAAA,EAAA,GAAA,CAAA,OAAA,CAAA,MAAA,CAFA;GADA,EAIA,eAAA,GAAA,SAAA,GAAA,EAAA,OAAA,EAAA,eAAA;AACA,QAAA;IAAA,IAAA,GAAA;MACA,OAAA,CAAA,KAAA,CAAA,GAAA,EADA;KAAA,MAAA;AAIA,cAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AAAA,aACA,MADA;AAAA,aACA,MADA;UAEA,GAAA,GAAA,OAAA,CAAA,SAAA;UACA,GAAA,GAAA,IAAA;UACA,GAAA,CAAA,OAAA,CAAA,OAAA,EAAA,OAAA,CACA,CAAA,IADA,CACA,SAAA;YACA,EAAA,CAAA,OAAA,CAAA,OAAA,EAAA,SAAA,GAAA,EAAA,KAAA;AACA,kBAAA;cAAA,IAAA,GAAA;gBACA,OAAA,CAAA,KAAA,CAAA,GAAA;AACA,uBAFA;;AAIA,mBAAA,uCAAA;;AACA,wBAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,uBACA,MADA;AAAA,uBACA,MADA;AAAA,uBACA,OADA;AAAA,uBACA,MADA;oBAEA,SAAA;oBACA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA;AAHA;AADA;cAKA,YAAA,CAAA,IAAA,CAAA,QAAA;YAVA,CAAA;UADA,CADA;AAeA;AAnBA,aAoBA,MApBA;UAqBA,KAAA,GAAA,OAAA,CAAA,OAAA;UACA,GAAA,GAAA,IAAA,KAAA,CAAA,OAAA;UAEA,GAAA,CAAA,IAAA,CAAA,SAAA,GAAA,EAAA,OAAA;AACA,gBAAA;YAAA,OAAA,CAAA,IAAA,CAAA,SAAA,CAAA,EAAA,CAAA;cACA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA;uBACA,CAAA,EADA;eAAA,MAAA;uBAGA,EAHA;;YADA,CAAA;YAKA,MAAA,GAAA;AACA,iBAAA,yCAAA;;cACA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA;cACA,QAAA,GAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA;cACA,MAAA,CAAA,EAAA,CAAA,KAAA,EAAA,SAAA;gBACA,OAAA,CAAA,KAAA,CAAA,GAAA;cADA,CAAA;cAGA,QAAA,CAAA,EAAA,CAAA,MAAA,EAAA,SAAA;gBACA,MAAA;cADA,CAAA;cAGA,QAAA,CAAA,EAAA,CAAA,OAAA,EAAA,SAAA;gBACA,MAAA;gBACA,IAAA,MAAA,KAAA,CAAA;kBACA,EAAA,CAAA,OAAA,CAAA,OAAA,EAAA,SAAA,GAAA,EAAA,KAAA;AACA,wBAAA;oBAAA,IAAA,GAAA;sBACA,OAAA,CAAA,KAAA,CAAA,GAAA,EADA;qBAAA,MAAA;sBAIA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,2BAAA,yCAAA;;AACA,gCAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,+BACA,MADA;AAAA,+BACA,MADA;AAAA,+BACA,OADA;AAAA,+BACA,MADA;4BAEA,SAAA;4BACA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA;AAHA;AADA;sBAKA,YAAA,CAAA,IAAA,CAAA,QAAA,EAVA;;kBADA,CAAA,EADA;;cAFA,CAAA;cAiBA,MAAA,CAAA,IAAA,CAAA,QAAA;AA1BA;UAPA,CAAA;AAxBA;MA2DA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,QAAA,EAAA,SAAA;QACA,eAAA,CAAA;MADA,CAAA,EA/DA;;EADA,CAJA;AALA;;AAiFA,OAAA,GAAA,SAAA,IAAA;AACA,MAAA;EAAA,EAAA,GAAA,OAAA,CAAA,IAAA;EACA,IAAA,GAAA,OAAA,CAAA,MAAA;EACA,MAAA,GAAA,OAAA,CAAA,YAAA;AAEA;IACA,UAAA,GAAA,MAAA,CAAA,IAAA;IACA,KAAA,GAAA,UAAA,CAAA,KAAA,GAAA,UAAA,CAAA;IACA,MAAA,GAAA,CAAA,CAAA,QAAA;IACA,OAAA,GAAA,CAAA,CAAA,aAAA;IAEA,MAAA,CAAA,MAAA,CAAA,mBAAA,GAAA,CAAA,KAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,+BAAA,GAAA,IAAA,GAAA,SAAA,GAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,IAAA;IACA,OAAA,CAAA,MAAA,CAAA,wCAAA,GAAA,IAAA,GAAA,SAAA,GAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,GAAA,UAAA,EAPA;GAAA,cAAA;IAQA;IACA,OAAA,CAAA,KAAA,CAAA,KAAA,EATA;;AALA;;AAuCA,MAAA,GAAA,OAAA,CAAA,QAAA;;AACA,YAAA,GAAA,IAAA,MAAA,CAAA;;AAGA,YAAA,CAAA,EAAA,CAAA,QAAA,EAAA,SAAA;EACA,GAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,WAAA,CACA;IAAA,MAAA,EAAA,IAAA;IACA,iBAAA,EAAA,IADA;IAEA,SAAA,EAAA,CAFA;IAGA,GAAA,EAAA,IAHA;IAIA,YAAA,EAAA,UAJA;IAKA,OAAA,EAAA,CACA,0FADA,EAEA,4FAFA,CALA;IASA,IAAA,EAAA,KATA;IAUA,KAAA,EAAA,IAVA;IAWA,eAAA,EAAA,IAXA;IAYA,UAAA,EACA;MAAA,CAAA,EACA;QAAA,KAAA,EAAA,CAAA;QACA,QAAA,EAAA,KADA;OADA;MAGA,IAAA,EACA;QAAA,KAAA,EAAA,CAAA;QACA,QAAA,EAAA,IADA;OAJA;MAMA,IAAA,EACA;QAAA,KAAA,EAAA,CAAA;QACA,QAAA,EAAA,IADA;OAPA;KAbA;GADA;EAyBA,GAAA,CAAA,EAAA,CAAA,YAAA,EAAA,YAAA,EAAA,SAAA,CAAA;IACA,CAAA,CAAA,cAAA,CAAA;IACA,IAAA,CAAA,CAAA,MAAA,GAAA,CAAA;MACA,GAAA,CAAA,OAAA,CAAA,UAAA,EADA;KAAA,MAAA;MAGA,GAAA,CAAA,OAAA,CAAA,UAAA,EAHA;;EAFA,CAAA;AA1BA,CAAA;;AAsCA,UAAA,GAAA,SAAA;AACA,MAAA;EAAA,UAAA,GAAA;EACA,CAAA,CAAA,uBAAA,CAAA,CAAA,IAAA,CAAA,SAAA,KAAA,EAAA,IAAA;IACA,UAAA,IAAA,IAAA,CAAA;EADA,CAAA;EAGA,IAAA,UAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,CAAA;IACA,UAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,EADA;;EAEA,IAAA,CAAA,CAAA,aAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,UAAA;IACA,CAAA,CAAA,aAAA,CAAA,CAAA,KAAA,CAAA,UAAA,EADA;;AAEA,SAAA;AATA;;AAYA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,SAAA,EAAA,SAAA,CAAA;EACA,CAAA,CAAA,cAAA,CAAA;EACA,IAAA,CAAA,CAAA,GAAA,KAAA,UAAA,IAAA,CAAA,CAAA,GAAA,KAAA,YAAA,IAAA,CAAA,CAAA,OAAA,KAAA,EAAA;IACA,GAAA,CAAA,OAAA,CAAA,UAAA,EADA;GAAA,MAEA,IAAA,CAAA,CAAA,GAAA,KAAA,QAAA,IAAA,CAAA,CAAA,GAAA,KAAA,WAAA;IACA,GAAA,CAAA,OAAA,CAAA,UAAA,EADA;GAAA,MAEA,IAAA,CAAA,CAAA,GAAA,KAAA,MAAA;IACA,GAAA,CAAA,OAAA,CAAA,QAAA,EAAA,CAAA,EADA;GAAA,MAEA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA;IACA,GAAA,CAAA,OAAA,CAAA,QAAA,EAAA,SAAA,EADA;GAAA,MAIA,IAAA,CAAA,CAAA,GAAA,KAAA,GAAA,IAAA,CAAA,CAAA,GAAA,KAAA,GAAA;IACA,MAAA,CAAA,KAAA,CAAA,EADA;;AAZA,CAAA;;AAiBA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,SAAA;EACA,CAAA,CAAA,aAAA,CAAA,CAAA,KAAA,CAAA,UAAA,CAAA,CAAA;AADA,CAAA;;AAKA,CAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA;AACA,MAAA;EAAA,CAAA,CAAA,cAAA,CAAA;EACA,MAAA,GAAA,CAAA,CAAA,aAAA;EACA,KAAA,GAAA,UAAA,CAAA;EACA,KAAA,GAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,GAAA;EACA,SAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA;EACA,IAAA,KAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,CAAA;IACA,IAAA,CAAA,KAAA,GAAA,SAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,CAAA;MACA,SAAA,GAAA,KAAA,GAAA,UADA;;IAEA,MAAA,CAAA,OAAA,CACA;MAAA,IAAA,EAAA,IAAA,GAAA,SAAA;KADA,EAHA;GAAA,MAAA;IAMA,MAAA,CAAA,OAAA,CACA;MAAA,IAAA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,GAAA,KAAA;KADA,EANA;;AANA,CAAA;;AAiBA,CAAA,CAAA,eAAA,CAAA,CAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA;AACA,MAAA;EAAA,CAAA,CAAA,cAAA,CAAA;EACA,MAAA,GAAA,CAAA,CAAA,aAAA;EACA,IAAA,GAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA;EACA,KAAA,GAAA,UAAA,CAAA;EACA,SAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA;EACA,IAAA,IAAA,KAAA,CAAA;AAAA;GAAA,MAEA,IAAA,IAAA,GAAA,CAAA,IAAA,CAAA,IAAA,GAAA,SAAA,CAAA,GAAA,CAAA;IACA,MAAA,CAAA,OAAA,CACA;MAAA,IAAA,EAAA,IAAA,GAAA,SAAA;KADA,EADA;GAAA,MAAA;IAIA,MAAA,CAAA,OAAA,CACA;MAAA,IAAA,EAAA,CAAA;KADA,EAJA;;AARA,CAAA;;AAiBA,SAAA,OAAA,CAAA,UAAA;;AACA,kBAAA,EAAA;;AACA,OAAA,GAAA,IAAA,IAAA,CAAA;;AAEA,eAAA,GAAA,SAAA;AACA,MAAA;EAAA,aAAA,GAAA;IACA;MACA,KAAA,EAAA,YADA;MAEA,WAAA,EAAA,MAFA;MAGA,KAAA,EAAA,SAAA;eACA,GAAA,CAAA,OAAA,CAAA,QAAA,EAAA,CAAA;MADA,CAHA;KADA,EAOA;MACA,KAAA,EAAA,eADA;MAEA,WAAA,EAAA,QAFA;MAGA,KAAA,EAAA,SAAA;eACA,GAAA,CAAA,OAAA,CAAA,UAAA;MADA,CAHA;KAPA,EAaA;MACA,KAAA,EAAA,WADA;MAEA,WAAA,EAAA,UAFA;MAGA,KAAA,EAAA,SAAA;eACA,GAAA,CAAA,OAAA,CAAA,UAAA;MADA,CAHA;KAbA,EAmBA;MACA,KAAA,EAAA,WADA;MAEA,WAAA,EAAA,KAFA;MAGA,KAAA,EAAA,SAAA;eACA,GAAA,CAAA,OAAA,CAAA,QAAA,EAAA,SAAA;MADA,CAHA;KAnBA,EAyBA;MACA,IAAA,EAAA,WADA;MAEA,OAAA,EAAA,KAFA;KAzBA,EAuCA;MACA,KAAA,EAAA,MADA;MAEA,WAAA,EAAA,GAFA;MAGA,KAAA,EAAA,SAAA;eACA,MAAA,CAAA,KAAA,CAAA;MADA,CAHA;KAvCA;;AA+CA,OAAA,+CAAA;;IACA,OAAA,CAAA,MAAA,CAAA,IAAA,QAAA,CAAA,YAAA,CAAA;AADA;AAhDA;;AAqDA,eAAA,CAAA;;AAEA,gBAAA,CAAA,aAAA,EAAA,SAAA,CAAA;EACA,CAAA,CAAA,cAAA,CAAA;SACA,OAAA,CAAA,KAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,CAAA;AAFA,CAAA,EAGA,KAHA","file":"reader.js","sourcesContent":["'use strict'\r\n\r\n{remote} = require 'electron'\r\napp = remote.app\r\npkg = require '../package.json'\r\nconfigStore = require 'configstore'\r\ncfg = new configStore(pkg.name)\r\npageCount = 0 # TODO: Figure out why we can't get this from the info: callback\r\nowl = undefined\r\n\r\nwindow.loadPages = (cbrFile) -> # Needs to be a window. function or can't call it from main.js\r\n    fs = require 'fs'\r\n    path = require 'path'\r\n    tmp = require 'tmp'\r\n\r\n    tmp.dir\r\n        prefix: 'cbr_'\r\n        unsafeCleanup: true # So it deletes any files within\r\n        dir: app.getPath('temp')\r\n    , _tempDirCreated = (err, tmpPath, cleanupCallback) ->\r\n        if err\r\n            console.error err\r\n            return\r\n        else\r\n            switch path.extname cbrFile\r\n                when '.cbz', '.cb7'\r\n                    n7z = require 'node-7z'\r\n                    cbr = new n7z\r\n                    cbr.extract cbrFile, tmpPath\r\n                    .then ->\r\n                        fs.readdir tmpPath, (err, files) ->\r\n                            if err\r\n                                console.error err\r\n                                return\r\n                            # files.forEach (file, i) ->\r\n                            for file in files\r\n                                switch path.extname file\r\n                                    when '.png', '.jpg', '.jpeg', '.gif'\r\n                                        pageCount++\r\n                                        getPage path.join(tmpPath, file)\r\n                            eventEmitter.emit 'loaded'\r\n                            return\r\n                        return\r\n                    break;\r\n                when '.cbr'\r\n                    unrar = require 'unrar'\r\n                    cbr = new unrar cbrFile\r\n\r\n                    cbr.list (err, entries) ->\r\n                        entries.sort (a, b) ->\r\n                            if path.basename(a.name) < path.basename(b.name)\r\n                                -1\r\n                            else\r\n                                1\r\n                        active = 0 # Keep track of open streams TODO: Better way?\r\n                        for entry in entries\r\n                            stream = cbr.stream entry.name\r\n                            writable = fs.createWriteStream path.join(tmpPath, path.basename(entry.name))\r\n                            stream.on 'err', ->\r\n                                console.error err\r\n                                return\r\n                            writable.on 'open', ->\r\n                                active++\r\n                                return\r\n                            writable.on 'close', ->\r\n                                active--\r\n                                if active is 0\r\n                                    fs.readdir tmpPath, (err, files) ->\r\n                                        if err\r\n                                            console.error err\r\n                                            return\r\n                                        else\r\n                                            console.log files\r\n                                            for file in files\r\n                                                switch path.extname(file)\r\n                                                    when '.png', '.jpg', '.jpeg', '.gif'\r\n                                                        pageCount++\r\n                                                        getPage path.join(tmpPath, file)\r\n                                            eventEmitter.emit 'loaded'\r\n                                            return\r\n                                    return\r\n                            stream.pipe writable # Write the compressed file to temp file\r\n                        return\r\n            $(window).on 'unload', -> # Tidy up when the window closes\r\n                cleanupCallback()\r\n                return\r\n            return\r\n    return\r\n\r\n# Get a page from a temporary file\r\n# @param string file = full path of file to use\r\ngetPage = (file) ->\r\n    fs = require 'fs'\r\n    path = require 'path'\r\n    sizeOf = require 'image-size'\r\n\r\n    try\r\n      dimensions = sizeOf file\r\n      ratio = dimensions.width / dimensions.height\r\n      $pages = $ '#pages'\r\n      $thumbs = $ '.owl-thumbs'\r\n\r\n      $pages.append '<img data-merge=\"' + (if ratio < 1 then 1 else  2) + '\" class=\"lazyload\" data-src=\"' + file + '\" alt=\"' + path.basename(file) + '\">'\r\n      $thumbs.append '<div class=\"owl-thumb-item\"><img src=\"' + file + '\" alt=\"' + path.basename(file, path.extname(file)) + '\"></div>'\r\n    catch error\r\n        console.error error\r\n    return\r\n\r\n# Show/hide toggle the thumb navigation when the button is clicked\r\n# No longer used as it's moved to a CSS transition\r\n# $('#navThumb').on 'click', (e) ->\r\n#     toggleThumbnails()\r\n#     return\r\n\r\n# toggleThumbnails = ->\r\n#     if $('#navThumb').children('i').first().hasClass('fa-chevron-up')\r\n#         $('#navThumb').children('i').first().switchClass('fa-chevron-up', 'fa-chevron-down')\r\n#         $('.owl-thumbs,#navThumbLeft,#navThumbRight').css\r\n#             transition: '1s'\r\n#             transform: 'translateY(-240px)'\r\n#     else\r\n#         $('#navThumb').children('i').first().switchClass('fa-chevron-down', 'fa-chevron-up')\r\n#         $('.owl-thumbs,#navThumbLeft,#navThumbRight').css\r\n#             transition: '1s'\r\n#             transform: 'translateY(0px)'\r\n#     # $('#owl-thumb-nav').toggle 'clip',\r\n#     #     direction: 'down'\r\n#     return\r\n\r\n# For triggering an events once all pages are loaded\r\nevents = require 'events'\r\neventEmitter = new events.EventEmitter\r\n\r\n# Build the carousel once all the pages are loaded\r\neventEmitter.on 'loaded', ->\r\n    owl = $('#pages').owlCarousel\r\n        thumbs: true\r\n        thumbsPrerendered: true\r\n        dotsSpeed: 0\r\n        nav: true\r\n        navContainer: '#owl-nav' # Put nav buttons in this div\r\n        navText: [ # Use this as the buttons for the navigation\r\n            '<button class=\"btn btn-default\" id=\"navleft\"><i class=\"fa fa-chevron-left\"></i></button>',\r\n            '<button class=\"btn btn-default\" id=\"navright\"><i class=\"fa fa-chevron-right\"></i></button>'\r\n        ]\r\n        dots: false\r\n        merge: true # Allow double with pages\r\n        responsiveClass: true\r\n        responsive: # Dynamically set number of pages in reader based on width\r\n            0:\r\n                items: 1\r\n                mergeFit: false\r\n            1024:\r\n                items: 2\r\n                mergeFit: true\r\n            1440:\r\n                items: 3\r\n                mergeFit: true\r\n\r\n    # Use the mosewheel to scroll backwards and forwards\r\n    owl.on 'mousewheel', '.owl-stage', (e) ->\r\n        e.preventDefault()\r\n        if e.deltaY > 0\r\n            owl.trigger 'prev.owl'\r\n        else\r\n            owl.trigger 'next.owl'\r\n        return\r\n\r\n    return\r\n\r\n# Figure out how wide the thumb items are and resize the thumb nav div to suit\r\n# @return int totalWidth = width of all the thumbnail images\r\nthumbWidth = ->\r\n    totalWidth = 0\r\n    $('.owl-thumb-item > img').each (index, item) ->\r\n        totalWidth += item.width\r\n        return\r\n    if totalWidth < $(document).width()\r\n        totalWidth = $(document).width()\r\n    if $('.owl-thumbs').width() isnt totalWidth\r\n        $('.owl-thumbs').width(totalWidth)\r\n    return totalWidth\r\n\r\n# Use some accessibility controls for keyboard\r\n$(document) .on 'keydown', (e) ->\r\n    e.preventDefault()\r\n    if e.key is 'PageDown' or e.key is 'ArrowRight' or e.keyCode is 32\r\n        owl.trigger 'next.owl'\r\n    else if e.key is 'PageUp' or e.key is 'ArrowLeft'\r\n        owl.trigger 'prev.owl'\r\n    else if e.key is 'Home'\r\n        owl.trigger 'to.owl', 0\r\n    else if e.key is 'End'\r\n        owl.trigger 'to.owl', pageCount\r\n    # else if e.key is 't' or e.key is 'T'\r\n    #     toggleThumbnails()\r\n    else if e.key is 'x' or e.key is 'X'\r\n        window.close()\r\n    return\r\n\r\n# Make sure the thumbs stay the right width when resized\r\nwindow.addEventListener 'resize' , ->\r\n    $('.owl-thumbs').width thumbWidth()\r\n    return\r\n\r\n# Scroll the thumbs to the left and make sure they stay on the page\r\n$('#navThumbRight').on 'click', (e) ->\r\n    e.preventDefault()\r\n    thumbs = $('.owl-thumbs')\r\n    width = thumbWidth()\r\n    right = thumbs.position().left + width\r\n    increment = $(document).width()\r\n    if right > $(document).width() # Make sure the last thumb stops at the width of the page\r\n        if (right - increment) < $(document).width()\r\n            increment = right - increment\r\n        thumbs.animate\r\n            left: \"-=#{increment}\"\r\n    else\r\n        thumbs.animate\r\n            left: $(document).width - width\r\n    return\r\n\r\n# Scroll the thumbs to the right and make sure they stay on the page\r\n$('#navThumbLeft').on 'click', (e) ->\r\n    e.preventDefault()\r\n    thumbs = $('.owl-thumbs')\r\n    left = thumbs.position().left\r\n    width = thumbWidth()\r\n    increment = $(document).width()\r\n    if left is 0 # Don't let the thumbs move past zero\r\n        # do nothing\r\n    else if left < 0 and (left + increment) < 0\r\n        thumbs.animate\r\n            left: \"+=#{increment}\"\r\n    else\r\n        thumbs.animate\r\n            left: 0\r\n    return\r\n\r\n# Context Menu needs to be global\r\n{remote} = require 'electron'\r\n{Menu, MenuItem} = remote\r\nctxMenu = new Menu()\r\n\r\nmakeContextMenu = -> # Create an array of menuItem objects that can build the menu\r\n    templateItems = [\r\n            {\r\n                label: 'First Page'\r\n                accelerator: 'Home'\r\n                click: ->\r\n                    owl.trigger 'to.owl', 0\r\n            }\r\n            {\r\n                label: 'Previous Page'\r\n                accelerator: 'PageUp'\r\n                click: ->\r\n                    owl.trigger 'prev.owl'\r\n            }\r\n            {\r\n                label: 'Next Page'\r\n                accelerator: 'PageDown'\r\n                click: ->\r\n                    owl.trigger 'next.owl'\r\n            }\r\n            {\r\n                label: 'Last Page'\r\n                accelerator: 'End'\r\n                click: ->\r\n                    owl.trigger 'to.owl', pageCount\r\n            }\r\n            {\r\n                role: 'separator'\r\n                enabled: false\r\n            }\r\n            # {\r\n            #     label: 'Toggle Thumbnails'\r\n            #     accelerator: 'T'\r\n            #     click: ->\r\n            #         toggleThumbnails()\r\n            # }\r\n            # {\r\n            #     role: 'separator'\r\n            #     enabled: false\r\n            # }\r\n            {\r\n                label: 'Exit'\r\n                accelerator: 'X'\r\n                click: ->\r\n                    window.close()\r\n            }\r\n        ]\r\n\r\n    for templateItem in templateItems # Build the context menu\r\n        ctxMenu.append new MenuItem(templateItem)\r\n\r\n    return\r\n\r\nmakeContextMenu() # Call the menu creation\r\n\r\naddEventListener 'contextmenu', (e) -> # trigger the context menu on right click\r\n    e.preventDefault()\r\n    ctxMenu.popup remote.getCurrentWindow()\r\n, false\r\n"]}